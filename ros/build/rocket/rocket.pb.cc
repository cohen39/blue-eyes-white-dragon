// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rocket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rocket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* Rocket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Rocket_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rocket_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_rocket_2eproto() {
  protobuf_AddDesc_rocket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rocket.proto");
  GOOGLE_CHECK(file != NULL);
  Rocket_descriptor_ = file->message_type(0);
  static const int Rocket_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, mdot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, fin1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, fin2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, fin3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, fin4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, cmd_mdot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, cmd_fin1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, cmd_fin2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, cmd_fin3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, cmd_fin4_),
  };
  Rocket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Rocket_descriptor_,
      Rocket::default_instance_,
      Rocket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, _has_bits_[0]),
      -1,
      -1,
      sizeof(Rocket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rocket, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rocket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Rocket_descriptor_, &Rocket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rocket_2eproto() {
  delete Rocket::default_instance_;
  delete Rocket_reflection_;
}

void protobuf_AddDesc_rocket_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_rocket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014rocket.proto\022\013gazebo.msgs\"\250\001\n\006Rocket\022\014"
    "\n\004mdot\030\001 \001(\002\022\014\n\004fin1\030\002 \001(\002\022\014\n\004fin2\030\003 \001(\002"
    "\022\014\n\004fin3\030\004 \001(\002\022\014\n\004fin4\030\005 \001(\002\022\020\n\010cmd_mdot"
    "\030\006 \001(\002\022\020\n\010cmd_fin1\030\007 \001(\002\022\020\n\010cmd_fin2\030\010 \001"
    "(\002\022\020\n\010cmd_fin3\030\t \001(\002\022\020\n\010cmd_fin4\030\n \001(\002", 198);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rocket.proto", &protobuf_RegisterTypes);
  Rocket::default_instance_ = new Rocket();
  Rocket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rocket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rocket_2eproto {
  StaticDescriptorInitializer_rocket_2eproto() {
    protobuf_AddDesc_rocket_2eproto();
  }
} static_descriptor_initializer_rocket_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rocket::kMdotFieldNumber;
const int Rocket::kFin1FieldNumber;
const int Rocket::kFin2FieldNumber;
const int Rocket::kFin3FieldNumber;
const int Rocket::kFin4FieldNumber;
const int Rocket::kCmdMdotFieldNumber;
const int Rocket::kCmdFin1FieldNumber;
const int Rocket::kCmdFin2FieldNumber;
const int Rocket::kCmdFin3FieldNumber;
const int Rocket::kCmdFin4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rocket::Rocket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gazebo.msgs.Rocket)
}

void Rocket::InitAsDefaultInstance() {
}

Rocket::Rocket(const Rocket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gazebo.msgs.Rocket)
}

void Rocket::SharedCtor() {
  _cached_size_ = 0;
  mdot_ = 0;
  fin1_ = 0;
  fin2_ = 0;
  fin3_ = 0;
  fin4_ = 0;
  cmd_mdot_ = 0;
  cmd_fin1_ = 0;
  cmd_fin2_ = 0;
  cmd_fin3_ = 0;
  cmd_fin4_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Rocket::~Rocket() {
  // @@protoc_insertion_point(destructor:gazebo.msgs.Rocket)
  SharedDtor();
}

void Rocket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Rocket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rocket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Rocket_descriptor_;
}

const Rocket& Rocket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rocket_2eproto();
  return *default_instance_;
}

Rocket* Rocket::default_instance_ = NULL;

Rocket* Rocket::New(::google::protobuf::Arena* arena) const {
  Rocket* n = new Rocket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rocket::Clear() {
// @@protoc_insertion_point(message_clear_start:gazebo.msgs.Rocket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Rocket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Rocket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(mdot_, cmd_fin2_);
  }
  ZR_(cmd_fin3_, cmd_fin4_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Rocket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gazebo.msgs.Rocket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float mdot = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mdot_)));
          set_has_mdot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_fin1;
        break;
      }

      // optional float fin1 = 2;
      case 2: {
        if (tag == 21) {
         parse_fin1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fin1_)));
          set_has_fin1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_fin2;
        break;
      }

      // optional float fin2 = 3;
      case 3: {
        if (tag == 29) {
         parse_fin2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fin2_)));
          set_has_fin2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_fin3;
        break;
      }

      // optional float fin3 = 4;
      case 4: {
        if (tag == 37) {
         parse_fin3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fin3_)));
          set_has_fin3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_fin4;
        break;
      }

      // optional float fin4 = 5;
      case 5: {
        if (tag == 45) {
         parse_fin4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fin4_)));
          set_has_fin4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_cmd_mdot;
        break;
      }

      // optional float cmd_mdot = 6;
      case 6: {
        if (tag == 53) {
         parse_cmd_mdot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cmd_mdot_)));
          set_has_cmd_mdot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_cmd_fin1;
        break;
      }

      // optional float cmd_fin1 = 7;
      case 7: {
        if (tag == 61) {
         parse_cmd_fin1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cmd_fin1_)));
          set_has_cmd_fin1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_cmd_fin2;
        break;
      }

      // optional float cmd_fin2 = 8;
      case 8: {
        if (tag == 69) {
         parse_cmd_fin2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cmd_fin2_)));
          set_has_cmd_fin2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_cmd_fin3;
        break;
      }

      // optional float cmd_fin3 = 9;
      case 9: {
        if (tag == 77) {
         parse_cmd_fin3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cmd_fin3_)));
          set_has_cmd_fin3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_cmd_fin4;
        break;
      }

      // optional float cmd_fin4 = 10;
      case 10: {
        if (tag == 85) {
         parse_cmd_fin4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cmd_fin4_)));
          set_has_cmd_fin4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gazebo.msgs.Rocket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gazebo.msgs.Rocket)
  return false;
#undef DO_
}

void Rocket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gazebo.msgs.Rocket)
  // optional float mdot = 1;
  if (has_mdot()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->mdot(), output);
  }

  // optional float fin1 = 2;
  if (has_fin1()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fin1(), output);
  }

  // optional float fin2 = 3;
  if (has_fin2()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fin2(), output);
  }

  // optional float fin3 = 4;
  if (has_fin3()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fin3(), output);
  }

  // optional float fin4 = 5;
  if (has_fin4()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fin4(), output);
  }

  // optional float cmd_mdot = 6;
  if (has_cmd_mdot()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->cmd_mdot(), output);
  }

  // optional float cmd_fin1 = 7;
  if (has_cmd_fin1()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->cmd_fin1(), output);
  }

  // optional float cmd_fin2 = 8;
  if (has_cmd_fin2()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->cmd_fin2(), output);
  }

  // optional float cmd_fin3 = 9;
  if (has_cmd_fin3()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->cmd_fin3(), output);
  }

  // optional float cmd_fin4 = 10;
  if (has_cmd_fin4()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->cmd_fin4(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gazebo.msgs.Rocket)
}

::google::protobuf::uint8* Rocket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gazebo.msgs.Rocket)
  // optional float mdot = 1;
  if (has_mdot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->mdot(), target);
  }

  // optional float fin1 = 2;
  if (has_fin1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fin1(), target);
  }

  // optional float fin2 = 3;
  if (has_fin2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fin2(), target);
  }

  // optional float fin3 = 4;
  if (has_fin3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fin3(), target);
  }

  // optional float fin4 = 5;
  if (has_fin4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fin4(), target);
  }

  // optional float cmd_mdot = 6;
  if (has_cmd_mdot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->cmd_mdot(), target);
  }

  // optional float cmd_fin1 = 7;
  if (has_cmd_fin1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->cmd_fin1(), target);
  }

  // optional float cmd_fin2 = 8;
  if (has_cmd_fin2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->cmd_fin2(), target);
  }

  // optional float cmd_fin3 = 9;
  if (has_cmd_fin3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->cmd_fin3(), target);
  }

  // optional float cmd_fin4 = 10;
  if (has_cmd_fin4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->cmd_fin4(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gazebo.msgs.Rocket)
  return target;
}

int Rocket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gazebo.msgs.Rocket)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional float mdot = 1;
    if (has_mdot()) {
      total_size += 1 + 4;
    }

    // optional float fin1 = 2;
    if (has_fin1()) {
      total_size += 1 + 4;
    }

    // optional float fin2 = 3;
    if (has_fin2()) {
      total_size += 1 + 4;
    }

    // optional float fin3 = 4;
    if (has_fin3()) {
      total_size += 1 + 4;
    }

    // optional float fin4 = 5;
    if (has_fin4()) {
      total_size += 1 + 4;
    }

    // optional float cmd_mdot = 6;
    if (has_cmd_mdot()) {
      total_size += 1 + 4;
    }

    // optional float cmd_fin1 = 7;
    if (has_cmd_fin1()) {
      total_size += 1 + 4;
    }

    // optional float cmd_fin2 = 8;
    if (has_cmd_fin2()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional float cmd_fin3 = 9;
    if (has_cmd_fin3()) {
      total_size += 1 + 4;
    }

    // optional float cmd_fin4 = 10;
    if (has_cmd_fin4()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rocket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gazebo.msgs.Rocket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Rocket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Rocket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gazebo.msgs.Rocket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gazebo.msgs.Rocket)
    MergeFrom(*source);
  }
}

void Rocket::MergeFrom(const Rocket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gazebo.msgs.Rocket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mdot()) {
      set_mdot(from.mdot());
    }
    if (from.has_fin1()) {
      set_fin1(from.fin1());
    }
    if (from.has_fin2()) {
      set_fin2(from.fin2());
    }
    if (from.has_fin3()) {
      set_fin3(from.fin3());
    }
    if (from.has_fin4()) {
      set_fin4(from.fin4());
    }
    if (from.has_cmd_mdot()) {
      set_cmd_mdot(from.cmd_mdot());
    }
    if (from.has_cmd_fin1()) {
      set_cmd_fin1(from.cmd_fin1());
    }
    if (from.has_cmd_fin2()) {
      set_cmd_fin2(from.cmd_fin2());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_cmd_fin3()) {
      set_cmd_fin3(from.cmd_fin3());
    }
    if (from.has_cmd_fin4()) {
      set_cmd_fin4(from.cmd_fin4());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Rocket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gazebo.msgs.Rocket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rocket::CopyFrom(const Rocket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gazebo.msgs.Rocket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rocket::IsInitialized() const {

  return true;
}

void Rocket::Swap(Rocket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rocket::InternalSwap(Rocket* other) {
  std::swap(mdot_, other->mdot_);
  std::swap(fin1_, other->fin1_);
  std::swap(fin2_, other->fin2_);
  std::swap(fin3_, other->fin3_);
  std::swap(fin4_, other->fin4_);
  std::swap(cmd_mdot_, other->cmd_mdot_);
  std::swap(cmd_fin1_, other->cmd_fin1_);
  std::swap(cmd_fin2_, other->cmd_fin2_);
  std::swap(cmd_fin3_, other->cmd_fin3_);
  std::swap(cmd_fin4_, other->cmd_fin4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rocket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Rocket_descriptor_;
  metadata.reflection = Rocket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rocket

// optional float mdot = 1;
bool Rocket::has_mdot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Rocket::set_has_mdot() {
  _has_bits_[0] |= 0x00000001u;
}
void Rocket::clear_has_mdot() {
  _has_bits_[0] &= ~0x00000001u;
}
void Rocket::clear_mdot() {
  mdot_ = 0;
  clear_has_mdot();
}
 float Rocket::mdot() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.mdot)
  return mdot_;
}
 void Rocket::set_mdot(float value) {
  set_has_mdot();
  mdot_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.mdot)
}

// optional float fin1 = 2;
bool Rocket::has_fin1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Rocket::set_has_fin1() {
  _has_bits_[0] |= 0x00000002u;
}
void Rocket::clear_has_fin1() {
  _has_bits_[0] &= ~0x00000002u;
}
void Rocket::clear_fin1() {
  fin1_ = 0;
  clear_has_fin1();
}
 float Rocket::fin1() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin1)
  return fin1_;
}
 void Rocket::set_fin1(float value) {
  set_has_fin1();
  fin1_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin1)
}

// optional float fin2 = 3;
bool Rocket::has_fin2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Rocket::set_has_fin2() {
  _has_bits_[0] |= 0x00000004u;
}
void Rocket::clear_has_fin2() {
  _has_bits_[0] &= ~0x00000004u;
}
void Rocket::clear_fin2() {
  fin2_ = 0;
  clear_has_fin2();
}
 float Rocket::fin2() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin2)
  return fin2_;
}
 void Rocket::set_fin2(float value) {
  set_has_fin2();
  fin2_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin2)
}

// optional float fin3 = 4;
bool Rocket::has_fin3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Rocket::set_has_fin3() {
  _has_bits_[0] |= 0x00000008u;
}
void Rocket::clear_has_fin3() {
  _has_bits_[0] &= ~0x00000008u;
}
void Rocket::clear_fin3() {
  fin3_ = 0;
  clear_has_fin3();
}
 float Rocket::fin3() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin3)
  return fin3_;
}
 void Rocket::set_fin3(float value) {
  set_has_fin3();
  fin3_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin3)
}

// optional float fin4 = 5;
bool Rocket::has_fin4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Rocket::set_has_fin4() {
  _has_bits_[0] |= 0x00000010u;
}
void Rocket::clear_has_fin4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Rocket::clear_fin4() {
  fin4_ = 0;
  clear_has_fin4();
}
 float Rocket::fin4() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin4)
  return fin4_;
}
 void Rocket::set_fin4(float value) {
  set_has_fin4();
  fin4_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin4)
}

// optional float cmd_mdot = 6;
bool Rocket::has_cmd_mdot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Rocket::set_has_cmd_mdot() {
  _has_bits_[0] |= 0x00000020u;
}
void Rocket::clear_has_cmd_mdot() {
  _has_bits_[0] &= ~0x00000020u;
}
void Rocket::clear_cmd_mdot() {
  cmd_mdot_ = 0;
  clear_has_cmd_mdot();
}
 float Rocket::cmd_mdot() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_mdot)
  return cmd_mdot_;
}
 void Rocket::set_cmd_mdot(float value) {
  set_has_cmd_mdot();
  cmd_mdot_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_mdot)
}

// optional float cmd_fin1 = 7;
bool Rocket::has_cmd_fin1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Rocket::set_has_cmd_fin1() {
  _has_bits_[0] |= 0x00000040u;
}
void Rocket::clear_has_cmd_fin1() {
  _has_bits_[0] &= ~0x00000040u;
}
void Rocket::clear_cmd_fin1() {
  cmd_fin1_ = 0;
  clear_has_cmd_fin1();
}
 float Rocket::cmd_fin1() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin1)
  return cmd_fin1_;
}
 void Rocket::set_cmd_fin1(float value) {
  set_has_cmd_fin1();
  cmd_fin1_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin1)
}

// optional float cmd_fin2 = 8;
bool Rocket::has_cmd_fin2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Rocket::set_has_cmd_fin2() {
  _has_bits_[0] |= 0x00000080u;
}
void Rocket::clear_has_cmd_fin2() {
  _has_bits_[0] &= ~0x00000080u;
}
void Rocket::clear_cmd_fin2() {
  cmd_fin2_ = 0;
  clear_has_cmd_fin2();
}
 float Rocket::cmd_fin2() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin2)
  return cmd_fin2_;
}
 void Rocket::set_cmd_fin2(float value) {
  set_has_cmd_fin2();
  cmd_fin2_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin2)
}

// optional float cmd_fin3 = 9;
bool Rocket::has_cmd_fin3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Rocket::set_has_cmd_fin3() {
  _has_bits_[0] |= 0x00000100u;
}
void Rocket::clear_has_cmd_fin3() {
  _has_bits_[0] &= ~0x00000100u;
}
void Rocket::clear_cmd_fin3() {
  cmd_fin3_ = 0;
  clear_has_cmd_fin3();
}
 float Rocket::cmd_fin3() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin3)
  return cmd_fin3_;
}
 void Rocket::set_cmd_fin3(float value) {
  set_has_cmd_fin3();
  cmd_fin3_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin3)
}

// optional float cmd_fin4 = 10;
bool Rocket::has_cmd_fin4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Rocket::set_has_cmd_fin4() {
  _has_bits_[0] |= 0x00000200u;
}
void Rocket::clear_has_cmd_fin4() {
  _has_bits_[0] &= ~0x00000200u;
}
void Rocket::clear_cmd_fin4() {
  cmd_fin4_ = 0;
  clear_has_cmd_fin4();
}
 float Rocket::cmd_fin4() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin4)
  return cmd_fin4_;
}
 void Rocket::set_cmd_fin4(float value) {
  set_has_cmd_fin4();
  cmd_fin4_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

// @@protoc_insertion_point(global_scope)
