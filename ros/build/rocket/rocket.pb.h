// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rocket.proto

#ifndef PROTOBUF_rocket_2eproto__INCLUDED
#define PROTOBUF_rocket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_rocket_2eproto();
void protobuf_AssignDesc_rocket_2eproto();
void protobuf_ShutdownFile_rocket_2eproto();

class Rocket;

// ===================================================================

class Rocket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gazebo.msgs.Rocket) */ {
 public:
  Rocket();
  virtual ~Rocket();

  Rocket(const Rocket& from);

  inline Rocket& operator=(const Rocket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rocket& default_instance();

  void Swap(Rocket* other);

  // implements Message ----------------------------------------------

  inline Rocket* New() const { return New(NULL); }

  Rocket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rocket& from);
  void MergeFrom(const Rocket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rocket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float mdot = 1;
  bool has_mdot() const;
  void clear_mdot();
  static const int kMdotFieldNumber = 1;
  float mdot() const;
  void set_mdot(float value);

  // optional float fin1 = 2;
  bool has_fin1() const;
  void clear_fin1();
  static const int kFin1FieldNumber = 2;
  float fin1() const;
  void set_fin1(float value);

  // optional float fin2 = 3;
  bool has_fin2() const;
  void clear_fin2();
  static const int kFin2FieldNumber = 3;
  float fin2() const;
  void set_fin2(float value);

  // optional float fin3 = 4;
  bool has_fin3() const;
  void clear_fin3();
  static const int kFin3FieldNumber = 4;
  float fin3() const;
  void set_fin3(float value);

  // optional float fin4 = 5;
  bool has_fin4() const;
  void clear_fin4();
  static const int kFin4FieldNumber = 5;
  float fin4() const;
  void set_fin4(float value);

  // optional float cmd_mdot = 6;
  bool has_cmd_mdot() const;
  void clear_cmd_mdot();
  static const int kCmdMdotFieldNumber = 6;
  float cmd_mdot() const;
  void set_cmd_mdot(float value);

  // optional float cmd_fin1 = 7;
  bool has_cmd_fin1() const;
  void clear_cmd_fin1();
  static const int kCmdFin1FieldNumber = 7;
  float cmd_fin1() const;
  void set_cmd_fin1(float value);

  // optional float cmd_fin2 = 8;
  bool has_cmd_fin2() const;
  void clear_cmd_fin2();
  static const int kCmdFin2FieldNumber = 8;
  float cmd_fin2() const;
  void set_cmd_fin2(float value);

  // optional float cmd_fin3 = 9;
  bool has_cmd_fin3() const;
  void clear_cmd_fin3();
  static const int kCmdFin3FieldNumber = 9;
  float cmd_fin3() const;
  void set_cmd_fin3(float value);

  // optional float cmd_fin4 = 10;
  bool has_cmd_fin4() const;
  void clear_cmd_fin4();
  static const int kCmdFin4FieldNumber = 10;
  float cmd_fin4() const;
  void set_cmd_fin4(float value);

  // @@protoc_insertion_point(class_scope:gazebo.msgs.Rocket)
 private:
  inline void set_has_mdot();
  inline void clear_has_mdot();
  inline void set_has_fin1();
  inline void clear_has_fin1();
  inline void set_has_fin2();
  inline void clear_has_fin2();
  inline void set_has_fin3();
  inline void clear_has_fin3();
  inline void set_has_fin4();
  inline void clear_has_fin4();
  inline void set_has_cmd_mdot();
  inline void clear_has_cmd_mdot();
  inline void set_has_cmd_fin1();
  inline void clear_has_cmd_fin1();
  inline void set_has_cmd_fin2();
  inline void clear_has_cmd_fin2();
  inline void set_has_cmd_fin3();
  inline void clear_has_cmd_fin3();
  inline void set_has_cmd_fin4();
  inline void clear_has_cmd_fin4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float mdot_;
  float fin1_;
  float fin2_;
  float fin3_;
  float fin4_;
  float cmd_mdot_;
  float cmd_fin1_;
  float cmd_fin2_;
  float cmd_fin3_;
  float cmd_fin4_;
  friend void  protobuf_AddDesc_rocket_2eproto();
  friend void protobuf_AssignDesc_rocket_2eproto();
  friend void protobuf_ShutdownFile_rocket_2eproto();

  void InitAsDefaultInstance();
  static Rocket* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Rocket

// optional float mdot = 1;
inline bool Rocket::has_mdot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rocket::set_has_mdot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rocket::clear_has_mdot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rocket::clear_mdot() {
  mdot_ = 0;
  clear_has_mdot();
}
inline float Rocket::mdot() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.mdot)
  return mdot_;
}
inline void Rocket::set_mdot(float value) {
  set_has_mdot();
  mdot_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.mdot)
}

// optional float fin1 = 2;
inline bool Rocket::has_fin1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rocket::set_has_fin1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rocket::clear_has_fin1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rocket::clear_fin1() {
  fin1_ = 0;
  clear_has_fin1();
}
inline float Rocket::fin1() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin1)
  return fin1_;
}
inline void Rocket::set_fin1(float value) {
  set_has_fin1();
  fin1_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin1)
}

// optional float fin2 = 3;
inline bool Rocket::has_fin2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rocket::set_has_fin2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rocket::clear_has_fin2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rocket::clear_fin2() {
  fin2_ = 0;
  clear_has_fin2();
}
inline float Rocket::fin2() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin2)
  return fin2_;
}
inline void Rocket::set_fin2(float value) {
  set_has_fin2();
  fin2_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin2)
}

// optional float fin3 = 4;
inline bool Rocket::has_fin3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rocket::set_has_fin3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rocket::clear_has_fin3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rocket::clear_fin3() {
  fin3_ = 0;
  clear_has_fin3();
}
inline float Rocket::fin3() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin3)
  return fin3_;
}
inline void Rocket::set_fin3(float value) {
  set_has_fin3();
  fin3_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin3)
}

// optional float fin4 = 5;
inline bool Rocket::has_fin4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Rocket::set_has_fin4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Rocket::clear_has_fin4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Rocket::clear_fin4() {
  fin4_ = 0;
  clear_has_fin4();
}
inline float Rocket::fin4() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.fin4)
  return fin4_;
}
inline void Rocket::set_fin4(float value) {
  set_has_fin4();
  fin4_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.fin4)
}

// optional float cmd_mdot = 6;
inline bool Rocket::has_cmd_mdot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Rocket::set_has_cmd_mdot() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Rocket::clear_has_cmd_mdot() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Rocket::clear_cmd_mdot() {
  cmd_mdot_ = 0;
  clear_has_cmd_mdot();
}
inline float Rocket::cmd_mdot() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_mdot)
  return cmd_mdot_;
}
inline void Rocket::set_cmd_mdot(float value) {
  set_has_cmd_mdot();
  cmd_mdot_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_mdot)
}

// optional float cmd_fin1 = 7;
inline bool Rocket::has_cmd_fin1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Rocket::set_has_cmd_fin1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Rocket::clear_has_cmd_fin1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Rocket::clear_cmd_fin1() {
  cmd_fin1_ = 0;
  clear_has_cmd_fin1();
}
inline float Rocket::cmd_fin1() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin1)
  return cmd_fin1_;
}
inline void Rocket::set_cmd_fin1(float value) {
  set_has_cmd_fin1();
  cmd_fin1_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin1)
}

// optional float cmd_fin2 = 8;
inline bool Rocket::has_cmd_fin2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Rocket::set_has_cmd_fin2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Rocket::clear_has_cmd_fin2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Rocket::clear_cmd_fin2() {
  cmd_fin2_ = 0;
  clear_has_cmd_fin2();
}
inline float Rocket::cmd_fin2() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin2)
  return cmd_fin2_;
}
inline void Rocket::set_cmd_fin2(float value) {
  set_has_cmd_fin2();
  cmd_fin2_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin2)
}

// optional float cmd_fin3 = 9;
inline bool Rocket::has_cmd_fin3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Rocket::set_has_cmd_fin3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Rocket::clear_has_cmd_fin3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Rocket::clear_cmd_fin3() {
  cmd_fin3_ = 0;
  clear_has_cmd_fin3();
}
inline float Rocket::cmd_fin3() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin3)
  return cmd_fin3_;
}
inline void Rocket::set_cmd_fin3(float value) {
  set_has_cmd_fin3();
  cmd_fin3_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin3)
}

// optional float cmd_fin4 = 10;
inline bool Rocket::has_cmd_fin4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Rocket::set_has_cmd_fin4() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Rocket::clear_has_cmd_fin4() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Rocket::clear_cmd_fin4() {
  cmd_fin4_ = 0;
  clear_has_cmd_fin4();
}
inline float Rocket::cmd_fin4() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.Rocket.cmd_fin4)
  return cmd_fin4_;
}
inline void Rocket::set_cmd_fin4(float value) {
  set_has_cmd_fin4();
  cmd_fin4_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.Rocket.cmd_fin4)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rocket_2eproto__INCLUDED
